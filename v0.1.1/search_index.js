var documenterSearchIndex = {"docs":
[{"location":"#SymSpellChecker.jl","page":"Home","title":"SymSpellChecker.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SymSpellChecker]","category":"page"},{"location":"#SymSpellChecker.edits!-NTuple{4,Any}","page":"Home","title":"SymSpellChecker.edits!","text":"edits!(delete_words, word, edit_distance, max_dictionary_distance)\n\nInexpensive and language independent: only deletes, no transposes + replaces + inserts replaces and inserts are expensive and language dependent\n\n\n\n\n\n","category":"method"},{"location":"#SymSpellChecker.lookup-Union{Tuple{S}, Tuple{Any,S}} where S<:AbstractString","page":"Home","title":"SymSpellChecker.lookup","text":"lookup(dict, phrase, max_edit_distance, include_unknown, ignore_token, transfer_casing)\n\nFind suggested spellings for a given phrase word. Parameters ––––– phrase : str     The word being spell checked. verbosity : :class:Verbosity     The value controlling the quantity/closeness of the     returned suggestions. maxeditdistance : int, optional     The maximum edit distance between phrase and suggested     words. Set to :attr:_max_dictionary_edit_distance by     default includeunknown : bool, optional     A flag to determine whether to include phrase word in     suggestions, if no words within edit distance found. ignoretoken : regex pattern, optional     A regex pattern describing what words/phrases to ignore and     leave unchanged transfercasing : bool, optional     A flag to determine whether the casing –- i.e., uppercase     vs lowercase –- should be carried over from phrase. Returns –––- suggestions : list     suggestions is a list of :class:SuggestItem objects     representing suggested correct spellings for the phrase     word, sorted by edit distance, and secondarily by count     frequency. Raises ––– ValueError     If `maxeditdistanceis greater than     :attr:maxdictionaryedit_distance`\n\n\n\n\n\n","category":"method"},{"location":"#SymSpellChecker.transfer_casing_for_matching_text-Tuple{Any,Any}","page":"Home","title":"SymSpellChecker.transfer_casing_for_matching_text","text":"transfer_casing_for_matching_text(text_w_casing, text_wo_casing)\n\nTransferring the casing from one text to another - assuming that they are 'matching' texts, alias they have the same length. Parameters ––––– textwcasing : str     Text with varied casing textwocasing : str     Text that is in lowercase only Returns –––- str     Text with the content of text_wo_casing and the casing of     text_w_casing Raises ––– ArgumentError     If the input texts have different lengths\n\n\n\n\n\n","category":"method"},{"location":"#SymSpellChecker.transfer_casing_for_similar_text-Tuple{Any,Any}","page":"Home","title":"SymSpellChecker.transfer_casing_for_similar_text","text":"transfer_casing_for_similar_text(text_w_casing, text_wo_casing)\n\n\n\n\n\n","category":"method"}]
}
